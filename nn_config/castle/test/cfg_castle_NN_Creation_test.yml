# NN_Creation
# cfg_castle_NN_Creation.yml
---
documentation:
  description: Options (specifications) for the "NN_Creation" script.

  authors:
    - iglesias-suarez_fernando
    - solino-fernandez_breixo

  maintainer:
    - iglesias-suarez_fernando
    - solino-fernandez_breixo

  references:
    - acknow_project

  projects:
    - usmile


# Common
# ======
# Note: Specify all directories/files from the project root
# Specifications
analysis: 'single' # 'single': gridpoints individually;
# 'concat': gridpoints contatenated into a
#           single time-series;
spcam_parents: [ 'ps' ] # [ 'tbp','qbp','vbp','ps','solin','shflx','lhflx' ]
spcam_children: [ 'phq' ] # [ 'tphystnd','phq','fsns','flns','fsnt','flnt','prect' ]
# PCMCI. independence_test : "parcorr"
# Correlation. independence_test : "pearsonr"
# PCA. independence_test : "pca"
independence_test: "None" # todo: If PCA, the code doesn't work because of l. 21 in neural_networks/data_generator.py: if setup.ind_test_name == "pca":
pc_alphas: [ 0.01 ] # [0.001,0.01,0.1]; [0.01,0.05]
region: [ [ -90,90 ] , [ 0.,359. ] ]
lim_levels: False
# Model levels : [3.64, 7.59, 14.36, 24.61, 38.27, 54.6, 72.01, 87.82, 103.32, 121.55, 142.99, 168.23, 197.91, 232.83, 273.91, 322.24, 379.1, 445.99, 524.69, 609.78, 691.39, 763.4, 820.86, 859.53, 887.02, 912.64, 936.2, 957.49, 976.33, 992.56]
target_levels: False # [197.91] # False
# Rasp. TB: "./SPCAM_Rasp_causal_links_3mth"; "./SPCAM_Rasp_causal_links_3mth_v2";
#           "./SPCAM_Rasp_causal_links_3mth_pearsonr_v2"
output_folder: "./SPCAM_Rasp_causal_links_3mth_v2"
plots_folder: "plots"
verbosity: 1
output_file_pattern:
  single: "{var_name}_{level}_lat-{lat}_lon-{lon}_{ind_test}_{experiment}.obj"
  concat: "{var_name}_{level}_{lat1}-{lat2}_{lon1}-{lon2}_{ind_test}_{experiment}.obj"
## DATASETS. 
# Tom's: SPCAM_tb_recons; Aqua_0K_t-dt_recons
data_folder: "./SPCAM_tb_recons"
# Tom's. Rasp:      2021_09_02_TRAIN_For_Nando; 
experiment: "2021_09_02_TRAIN_For_Nando"
shifting: 0 # 0 (no shifting); 1 (output t-1)


# Aggregated analysis
# ===================
thresholds: [ .59 ]
area_weighted: True # True; False
pdf: True # True; False
aggregate_folder: "./aggregate_pdf"
plot_file_pattern:
  single: "{var_name}_{level}_lat{lat}_lon{lon}_a{pc_alpha}_{ind_test}_{experiment}.png"
  concat: "{var_name}_{level}_{lat1}-{lat2}_{lon1}-{lon2}_a{pc_alpha}_{ind_test}_{experiment}.png"


# Neural Network configuration
# ============================

nn_type: "castleNN" # "all"; SingleNN"; "CausalSingleNN"; "CorrSingleNN"; "pcaNN"; "castleNN"

nn_output_path: nn_config/castle/test/output/models_castle

input_order: [ ps ] # [ qbp, tbp, vbp, ps, solin, shflx, lhflx ]
output_order: [ phq ] # [ phq, tphystnd, fsnt, fsns, flnt, flns, prect ]

hidden_layers:  [32, 32]  # [ 256,256,256,256,256,256,256,256,256 ]
activation: ReLU # LeakyReLU. Use ReLU as in original CASTLE implementation


# Training configuration
# ----------------------
## DATASETS.
# Tom's: SPCAM_tb_prepoc
train_data_folder: "./notebooks_castle/test_data/"  #"./SPCAM_tb_preproc", "./notebooks_castle/test_data/"
# Tom's. Case: TRAIN/VALID. Rasp: 2021_09_02_TRAIN_For_Nando_shuffle.nc
#                                 2021_09_02_VALID_For_Nando.nc
train_data_fn: 2021_09_02_TRAIN_For_Nando_shuffle_perc0-0001.nc  # 2021_09_02_TRAIN_For_Nando_shuffle.nc
valid_data_fn: 2021_09_02_VALID_For_Nando_perc0-0002.nc  #2021_09_02_VALID_For_Nando.nc
epochs: 2
train_verbose: 1 # 0:Silent; 1:Continuous update; 2:Summary on epochs
tensorboard_folder: output/tensorboard

# From Tom https://github.com/tbeucler/CBRAIN-CAM/tree/master/notebooks/tbeucler_devlog/UW_DATA
normalization_folder: "./notebooks_castle/test_data/"  #./SPCAM_tb_preproc, "./notebooks_castle/test_data/"
normalization_fn: 001_norm_for_tb_dataset.nc

input_sub: mean
input_div: maxrs
out_scale_dict_folder: ./nn_config/scale_dicts/ # ./nn_config/scale_dicts/
out_scale_dict_fn: 002_pnas_scaling.pkl
batch_size: 256  #1024

# Learning Rate Scheduler
init_lr: 0.001 # From train.py (default)
step_lr: 3 # From 006_8col_pnas_exact.yml
divide_lr: 5 # From train.py (default)

# Early Stopping
train_patience: 5 # TODO: This number was chosen arbitrarily


# CASTLE
# ===================
rho: 1.0
alpha: 1.0
beta: 1.0
lambda: 1.0
do_mirrored_strategy: True




